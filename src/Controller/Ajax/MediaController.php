<?php
/**
 * Created by PhpStorm.
 * User: finleysiebert
 * Date: 14-02-18
 * Time: 23:24
 */

namespace App\Controller\Ajax;


use App\Controller\AppController;
use App\Model\Table\MediaTable;
use Cake\Event\Event;
use Cake\Filesystem\File;
use Cake\Http\Cookie\Cookie;
use Cake\Network\Exception\MethodNotAllowedException;
use Cake\Routing\Router;

/**
 * @property MediaTable Media
 */
class MediaController extends AppController
{
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->loadComponent('RequestHandler');
    }

    public function beforeFilter(Event $event)
    {
        $this->Auth->allow(['add']);
        return parent::beforeFilter($event); // TODO: Change the autogenerated stub
    }

    public function add()
    {
        $_allowedMedias = [
            'image/jpeg',
            'image/jpg',
            'image/png',
            'image/gif',
            'video/mpeg',
            'video/mp4',
            'audio/mpeg',
            'audio/ogg',
            'video/ogg',
            'audio/webm',
            'audio/x-wav',
            'audio/wav',
            'video/webm',
            'audio/midi',
            'audio/mid',
        ];

        $tempMediaCookie = null;

        if($this->request->is('ajax')) {
            $files = $this->request->getData();

            $_deniedMedias = [];
            $_acceptedMedias = [];

            foreach($files as $key => $file) {
                if(preg_match('/file_[a-zA-Z0-9]/xs', $key)) {

                    $media = $this->Media->newEntity();
                    $media->name = pathinfo($files[$key]['name'], PATHINFO_FILENAME);
                    $media->extension = pathinfo($files[$key]['name'], PATHINFO_EXTENSION);
                    $media->size = pathinfo($files[$key]['size']);
                    $media->post_id = null;
                    $media->user_id = (is_null($this->Auth->user('id'))) ? $this->Auth->user('id') : null;
                    $media->content_type = trim(shell_exec('file --brief --mime-type ' . escapeshellarg($files[$key]['tmp_name'])));

                    if(!in_array($media->content_type, $_allowedMedias)) {
                        array_push($_deniedMedias, $media);
                    }
                    else
                    {
                        array_push($_acceptedMedias, $media);
                    }


                }
            }

            $tempMediaCookie = (new Cookie('media'))
                ->withPath('/')
                ->withExpiry(new \DateTime('+7 days'))
                ->withValue(json_encode($_acceptedMedias))
                ->withHttpOnly(true);

            $response = [
                'uploaded' => $_acceptedMedias,
                'denied' => $_deniedMedias,
                'action' => is_null($this->Auth->user('id')) ? Router::url([
                    'controller' => 'Users',
                    'action' => 'register',
                    'src' => 'with-media',
                    'prefix' => false,
                ]) : Router::url(['controller' => 'Posts', 'action' => 'add', 'prefix' => false]),
            ];
        }
        else
        {
            throw new MethodNotAllowedException(__('AJAX Requests only!'));
        }

        $this->set(compact('response'));
        $this->set('_serialize', ['response']);

        return $this->response
            ->withCookie($tempMediaCookie)
            ->withStringBody(json_encode($response));
    }
}